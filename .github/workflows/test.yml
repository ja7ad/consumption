name: Testing and coverage

on:
  pull_request:
  merge_group:
  push:
    branches: [ main ]

jobs:
  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: "1.25"
      - uses: actions/checkout@v4
      - name: Run go vet
        run: go vet ./...
      - name: Install fmt
        run: go install mvdan.cc/gofumpt@latest
      - name: Run fmt
        run: make fmt

  tests:
    name: tests
    runs-on: ubuntu-latest
    container:
      image: golang:1.25
      options: --privileged --cgroupns=host
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify cgroup mode and root access
        run: |
          echo "=== User and privileges ==="
          whoami
          id
          echo "=== Cgroup filesystem ==="
          echo -n "Detected cgroup fs type: "
          stat -fc %T /sys/fs/cgroup || true
          echo "=== Cgroup version ==="
          if [ -f /sys/fs/cgroup/cgroup.controllers ]; then
            echo "cgroup v2 (unified hierarchy)"
          elif [ -d /sys/fs/cgroup/cpu ]; then
            echo "cgroup v1 (legacy hierarchy)"
          else
            echo "Unknown cgroup setup"
          fi
          echo "=== Available cgroup controllers ==="
          ls -la /sys/fs/cgroup/ | head -10
          echo "=== Mounts ==="
          mount | grep cgroup || true

      - name: Download modules
        run: go mod download

      - name: Run tests with root privileges
        run: go test -race -v -gcflags=-l -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
